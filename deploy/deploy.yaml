apiVersion: v1
kind: Namespace
metadata:
  name: kube-oidc-issuer-reflector
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-oidc-issuer-reflector
  namespace: kube-oidc-issuer-reflector
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kube-oidc-issuer-reflector
  namespace: kube-oidc-issuer-reflector
rules:
  - verbs:
      - get
    apiGroups:
      - authentication.k8s.io
    resources:
      - oidcissuers
      - oidcclusterissuers
      - oidcconfigs
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kube-oidc-issuer-reflector
  namespace: kube-oidc-issuer-reflector
roleRef:
  kind: Role
  name: kube-oidc-issuer-reflector
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: kube-oidc-issuer-reflector
    namespace: kube-oidc-issuer-reflector
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-oidc-issuer-reflector
  namespace: kube-oidc-issuer-reflector
spec:
  replicas: 2
  selector:
    matchLabels:
      app: kube-oidc-issuer-reflector
  template:
    metadata:
      labels:
        app: kube-oidc-issuer-reflector
    spec:
      serviceAccountName: kube-oidc-issuer-reflector
      containers:
      - name: kube-oidc-issuer-reflector
        image: ghcr.io/kangarookube/kube-oidc-issuer-reflector:latest
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: "128Mi"
            cpu: "250m"
            ephemeral-storage: "10Mi"
          limits:
            memory: "512Mi"
            cpu: "500m"
            ephemeral-storage: "1Gi"
        livenessProbe:
          httpGet:
            path: /livez
            port: 8080
          initialDelaySeconds: 10
          timeoutSeconds: 2
          periodSeconds: 30
          failureThreshold: 2
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 3
          periodSeconds: 30
          failureThreshold: 3
      automountServiceAccountToken: true
---
apiVersion: v1
kind: Service
metadata:
  name: kube-oidc-issuer-reflector
  namespace: kube-oidc-issuer-reflector
spec:
  selector:
    app: kube-oidc-issuer-reflector
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kube-oidc-issuer-reflector
  namespace: kube-oidc-issuer-reflector
  annotations:
    cert-manager.io/cluster-issuer: "cloudflare-issuer"
spec:
  ingressClassName: nginx
  rules:
  - host: $OIDC_ISSUER_FQDN
    http:
      paths:
        - path: /.well-known/openid-configuration
          pathType: Prefix
          backend:
            service:
              name: kube-oidc-issuer-reflector
              port:
                number: 80
        - path: /openid/v1/jwks
          pathType: Prefix
          backend:
            service:
              name: kube-oidc-issuer-reflector
              port:
                number: 80
  tls:
    - hosts:
        - $OIDC_ISSUER_FQDN
      secretName: kube-oidc-issuer-reflector-tls
